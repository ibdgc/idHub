services:
  nginx:
    image: nginx:alpine
    container_name: nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - /etc/letsencrypt:/etc/letsencrypt:ro
      - /var/www/certbot:/var/www/certbot:ro
    depends_on:
      - nocodb
      - gsid-service
    networks:
      - idhub_network

  nocodb:
    image: nocodb/nocodb:latest
    container_name: nocodb
    restart: unless-stopped
    expose:
      - "8080"
    environment:
      NC_DB: "pg://nocodb_db:5432?u=nocodb&p=${NOCODB_DB_PASSWORD}&d=nocodb"
      NC_AUTH_JWT_SECRET: "${JWT_SECRET}"
      NC_PUBLIC_URL: "https://${DOMAIN}"
      NC_DISABLE_TELE: "true"
    volumes:
      - nocodb_data:/usr/app/data
    depends_on:
      nocodb_db:
        condition: service_healthy
    networks:
      - idhub_network
    healthcheck:
      test: ["CMD", "wget", "-q", "-O", "-", "http://localhost:8080/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  nocodb_db:
    image: postgres:15-alpine
    container_name: nocodb_db
    restart: unless-stopped
    environment:
      POSTGRES_DB: nocodb
      POSTGRES_USER: nocodb
      POSTGRES_PASSWORD: "${NOCODB_DB_PASSWORD}"
      POSTGRES_INITDB_ARGS: "-E UTF8"
    volumes:
      - nocodb_db_data:/var/lib/postgresql/data
    networks:
      - idhub_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U nocodb"]
      interval: 10s
      timeout: 5s
      retries: 5

  idhub_db:
    image: postgres:15-alpine
    container_name: idhub_db
    restart: unless-stopped
    environment:
      POSTGRES_DB: idhub
      POSTGRES_USER: idhub_user
      POSTGRES_PASSWORD: "${IDHUB_DB_PASSWORD}"
      POSTGRES_INITDB_ARGS: "-E UTF8"
    volumes:
      - idhub_db_data:/var/lib/postgresql/data
      - ./database/init-scripts:/docker-entrypoint-initdb.d:ro
    networks:
      - idhub_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U idhub_user -d idhub"]
      interval: 10s
      timeout: 5s
      retries: 5

  gsid-service:
    build: ./gsid-service
    container_name: gsid_service
    restart: unless-stopped
    expose:
      - "8000"
    environment:
      DB_HOST: idhub_db
      DB_NAME: idhub
      DB_USER: idhub_user
      DB_PASSWORD: "${IDHUB_DB_PASSWORD}"
      DB_PORT: 5432
    depends_on:
      idhub_db:
        condition: service_healthy
    networks:
      - idhub_network
    healthcheck:
      test: ["CMD", "wget", "-q", "-O", "-", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  nocodb_data:
    driver: local
  nocodb_db_data:
    driver: local
  idhub_db_data:
    driver: local

networks:
  idhub_network:
    driver: bridge
